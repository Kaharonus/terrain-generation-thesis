//
// Created by tomas on 03.10.21.
//

#pragma once

//Ignore the fact that if you look at the autogenerated include/shader.vs and .fs files they are empty.
//They get filled up at compile time with data from main_vs.glsl and ground_fs.glsl

const char *ground_vs =

#include <shaders/include/ground/ground_vs.shader.out>
        ;

const char *ground_fs =

#include <shaders/include/ground/ground_fs.shader.out>
        ;

const char *buildings_fs =

#include <shaders/include/buildings/buildings_fs.shader.out>
        ;

const char *buildings_vs =

#include <shaders/include/buildings/buildings_vs.shader.out>
        ;

const char *ground_tcs =

#include <shaders/include/ground/ground_tcs.shader.out>
        ;
const char *ground_es =

#include <shaders/include/ground/ground_es.shader.out>
        ;

const char *heightmap_fs =

#include <shaders/include/heightmap/heightmap_fs.shader.out>
        ;


const char *heightmap_es =

#include <shaders/include/heightmap/heightmap_es.shader.out>
        ;

const char *trees_fs =

#include <shaders/include/trees/tree_fs.shader.out>
        ;

const char *trees_vs =
#include <shaders/include/trees/tree_vs.shader.out>
        ;


class Shaders {
public:
    static const char *GroundVertexShader() {
        return ground_vs;
    }

    static const char *BuildingsVertexShader() {
        return buildings_vs;
    }


    static const char *GroundFragmentShader() {
        return ground_fs;
    };

    static const char *BuildingsFragmentShader() {
        return buildings_fs;
    };

    static const char *GroundTessellationControlShader() {
        return ground_tcs;
    };

    static const char *GroundTessellationEvaluationShader() {
        return ground_es;
    };

    static const char *HeightmapFragmentShader() {
        return heightmap_fs;
    };

    static const char *HeightmapEvaluationShader() {
        return heightmap_es;
    };

    static const char *TreesFragmentShader() {
        return trees_fs;
    };

    static const char *TreesVertexShader() {
        return trees_vs;
    };

};